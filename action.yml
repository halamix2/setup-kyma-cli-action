name: "Setup Kyma CLI"
description: "The action setups Kyma CLI."
inputs:
  version:
    description: "Version of Kyma CLI to use"
    required: false
  token:
    description: "Token to access GitHub API"
    required: true
runs:
  using: "composite"
  steps:
    - name: "Install Kyma CLI"
      shell: bash
      run: |
        set -e

        KYMA_CLI_VERSION="${{ inputs.version }}"
        if [[ -z "${KYMA_CLI_VERSION}" ]]; then
          KYMA_CLI_VERSION="$(gh release list --repo kyma-project/cli --json name,isLatest --jq '.[] | select(.isLatest)|.name')"
        fi

        ARCH="$(uname -m)"

        OS="$(uname -s)"
        # if OS contains MINGW prefix ten change OS to Windows
        if [[ "${OS}" =~ MINGW* ]]; then
          OS="Windows"
        fi

        EXT="tar.gz"
        if [[ "${OS}" == "Windows" ]]; then
          EXT="zip"
        fi
        filename="kyma_${OS}_${ARCH}.${EXT}"
        echo "Downloading ${filename}"

        CLI_TMPDIR=cli-$(date "+%Y-%m-%d_%H_%M_%S")
        mkdir -p ${CLI_TMPDIR}
        gh release download --repo kyma-project/cli "${KYMA_CLI_VERSION}" -p "${filename}" -O "${CLI_TMPDIR}/cli.${EXT}"

        if [[ "${OS}" == "Windows" ]]; then
          unzip ${CLI_TMPDIR}/cli.zip -d ${CLI_TMPDIR}
          mkdir -p ~/bin
          mv ${CLI_TMPDIR}/kyma.exe ~/bin/kyma.exe
          rm -r ${CLI_TMPDIR}
          echo "Installed $(kyma version)"
          exit 0
        fi

        force_local=""
        if [[ "$OS" == "Linux" ]]; then
          force_local="--force-local"
        fi

        tar "${force_local}" -zxvf ${CLI_TMPDIR}/cli.tar.gz kyma 
        mkdir -p ~/.local/bin
        mv kyma ~/.local/bin
        rm -r ${CLI_TMPDIR}
        echo "Installed $(kyma version)"
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
branding:
  icon: "download"
  color: "blue"
